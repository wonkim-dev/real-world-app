version: '3.9'

# Service Profiles
#   - production: Run all services.
#   - backend-dev: Run all services except for backend service. Used when developing backend.
#   - ci-e2e-test: Run all service required for e2e test in GitHub workflow.
#   example: docker compose --profile=backend-dev up

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  minio-data:
    driver: local

services:
  postgres:
    container_name: postgres
    image: postgres:14
    ports:
      - 5432:5432
    profiles:
      - production
      - backend-dev
      - ci-e2e-test
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init-db:/docker-entrypoint-initdb.d

  redis:
    container_name: redis
    image: redis:7.0-alpine
    ports:
      - 6379:6379
    profiles:
      - production
      - backend-dev
      - ci-e2e-test
    environment:
      REDIS_SAVE: ${REDIS_SAVE}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    command: redis-server --save "${REDIS_SAVE}" --requirepass "${REDIS_PASSWORD}" --loglevel warning

  minio:
    container_name: minio
    image: quay.io/minio/minio:RELEASE.2023-05-18T00-05-36Z
    ports:
      - 9000:9000
      - 9001:9001
    profiles:
      - production
      - backend-dev
      - ci-e2e-test
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:21.1.1
    ports:
      - 8080:8080
    profiles:
      - production
      - backend-dev
      - ci-e2e-test
    depends_on:
      - postgres
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL_HOST: ${KC_DB_URL_HOST}
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: ${KC_DB_URL_DATABASE}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_HOSTNAME_STRICT_HTTPS: ${KC_HOSTNAME_STRICT_HTTPS}
      KC_HTTP_ENABLED: ${KC_HTTP_ENABLED}
    entrypoint: /opt/keycloak/bin/kc.sh
    command: start

  backend:
    container_name: backend
    image: won6526/real-world-app-nestjs-backend:main
    ports:
      - 3000:3000
    profiles:
      - production
    depends_on:
      - postgres
      - redis
      - minio
      - keycloak
    environment:
      ENCRYPTION_ALGORITHM: ${BACKEND_ENCRYPTION_ALGORITHM}
      ENCRYPTION_CIPHER_KEY_HEX: ${BACKEND_ENCRYPTION_CIPHER_KEY_HEX}
      ENCRYPTION_CIPHER_IV_BYTES: ${BACKEND_ENCRYPTION_CIPHER_IV_BYTES}
      ENCRYPTION_AUTH_TAG_LENGTH: ${BACKEND_ENCRYPTION_AUTH_TAG_LENGTH}
      FILE_BUCKET: ${BACKEND_FILE_BUCKET}
      FILE_ALLOWED_FILE_MIME_TYPES_FOR_AVATAR: ${BACKEND_FILE_ALLOWED_FILE_MIME_TYPES_FOR_AVATAR}
      FILE_MAX_FILE_SIZE_IN_KB_FOR_AVATAR: ${BACKEND_FILE_MAX_FILE_SIZE_IN_KB_FOR_AVATAR}
      FILE_AVATAR_DOWNLOAD_URL_TTL: ${BACKEND_FILE_AVATAR_DOWNLOAD_URL_TTL}
      POSTGRES_HOST: ${BACKEND_POSTGRES_HOST}
      POSTGRES_PORT: ${BACKEND_POSTGRES_PORT}
      POSTGRES_USER: ${BACKEND_POSTGRES_USER}
      POSTGRES_PASSWORD: ${BACKEND_POSTGRES_PASSWORD}
      POSTGRES_DB: ${BACKEND_POSTGRES_DB}
      REDIS_DEFAULT_TTL: ${BACKEND_REDIS_DEFAULT_TTL}
      REDIS_URL: ${BACKEND_REDIS_URL}
      REDIS_PASSWORD: ${BACKEND_REDIS_PASSWORD}
      MINIO_ENDPOINT: ${BACKEND_MINIO_ENDPOINT}
      MINIO_PORT: ${BACKEND_MINIO_PORT}
      MINIO_USER_SSL: ${BACKEND_MINIO_USER_SSL}
      MINIO_ROOT_USER: ${BACKEND_MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${BACKEND_MINIO_ROOT_PASSWORD}
      KEYCLOAK_HOST: ${BACKEND_KEYCLOAK_HOST}
      KEYCLOAK_REALM: ${BACKEND_KEYCLOAK_REALM}
      KEYCLOAK_CLIENT: ${BACKEND_KEYCLOAK_CLIENT}
      KEYCLOAK_CLIENT_SECRET: ${BACKEND_KEYCLOAK_CLIENT_SECRET}
